class Solution {
    // 왼쪽 서브트리의 높이를 계산하는 헬퍼 메서드
    private int getLeftHeight(TreeNode node) {
        int height = 0;
        while (node != null) {
            height++;
            node = node.left;
        }
        return height;
    }

    // 오른쪽 서브트리의 높이를 계산하는 헬퍼 메서드
    private int getRightHeight(TreeNode node) {
        int height = 0;
        while (node != null) {
            height++;
            node = node.right;
        }
        return height;
    }

    public int countNodes(TreeNode root) {
        if (root == null) {
            return 0;
        }

        int leftHeight = getLeftHeight(root);
        int rightHeight = getRightHeight(root);

        if (leftHeight == rightHeight) {
            // 왼쪽 서브트리가 완전 이진 트리인 경우
            return (1 << leftHeight) - 1;
        } else {
            // 오른쪽 서브트리가 완전 이진 트리인 경우
            return 1 + countNodes(root.left) + countNodes(root.right);
        }
    }
}
