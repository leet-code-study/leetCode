class Solution {
    public boolean validUtf8(int[] data) {
        int count = 0; // 현재 검사 중인 문자에서 남은 바이트 수

        for (int num : data) {
            // 하위 8비트만 사용
            int b = num & 0xFF;

            if (count == 0) {
                // 새 문자의 첫 바이트를 만났을 때
                if ((b >> 7) == 0b0) {
                    // 1바이트 문자: 0xxxxxxx
                    count = 0;
                } else if ((b >> 5) == 0b110) {
                    // 2바이트 문자: 110xxxxx
                    count = 1;
                } else if ((b >> 4) == 0b1110) {
                    // 3바이트 문자: 1110xxxx
                    count = 2;
                } else if ((b >> 3) == 0b11110) {
                    // 4바이트 문자: 11110xxx
                    count = 3;
                } else {
                    // 규칙에 맞지 않음
                    return false;
                }
            } else {
                // 이어지는 바이트는 반드시 10xxxxxx 이어야 함
                if ((b >> 6) != 0b10) {
                    return false;
                }
                count--;
            }
        }

        return count == 0;
    }
}
