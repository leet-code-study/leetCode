class Solution {
    private static final int MOD = 1337;

    public int superPow(int a, int[] b) {
        a %= MOD; 
        return helper(a, b, b.length - 1);
    }

    private int helper(int a, int[] b, int index) {
        if (index < 0) return 1;
        int part1 = pow(a, b[index]);
        int part2 = pow(helper(a, b, index - 1), 10); 
        return (part1 * part2) % MOD;
    }

    private int pow(int x, int n) {
        int result = 1;
        x %= MOD;
        while (n > 0) {
            if ((n & 1) == 1) { 
                result = (result * x) % MOD;
            }
            x = (x * x) % MOD;
            n >>= 1;
        }
        return result;
    }
}
